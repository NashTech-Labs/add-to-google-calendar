{"ast":null,"code":"import _asyncToGenerator from \"/home/knoldus/Documents/tech/add-to-google-calendar/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { AddToGoogleCalendarComponent } from './add-to-google-calendar.component';\ndescribe('AddToGoogleCalendarComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [AddToGoogleCalendarComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(AddToGoogleCalendarComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should return the correct number', () => {\n    const result = component.zero_pad2(5);\n    expect(result).toEqual('05');\n  });\n  it('should return the correct number', () => {\n    const result = component.zero_pad2(15);\n    expect(result).toEqual(15);\n  });\n  it('should call format date with provided end date and start date', () => {\n    const start_date = component.startDate;\n    spyOn(component, 'format_date');\n    component.addToCalendar();\n    expect(component.format_date).toHaveBeenCalledWith(start_date);\n  });\n  it('should return the formatted date', () => {\n    const date = new Date('December 17, 2021 03:24:00');\n    const result = component.format_date(date);\n    expect(result).toEqual('20211217T032400GMT');\n  });\n});","map":{"version":3,"sources":["/home/knoldus/Documents/tech/add-to-google-calendar/src/app/components/add-to-google-calendar/add-to-google-calendar.component.spec.ts"],"names":["TestBed","AddToGoogleCalendarComponent","describe","component","fixture","beforeEach","configureTestingModule","declarations","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","result","zero_pad2","toEqual","start_date","startDate","spyOn","addToCalendar","format_date","toHaveBeenCalledWith","date","Date"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,4BAAT,QAA6C,oCAA7C;AACAC,QAAQ,CAAC,8BAAD,EAAiC,MAAM;AAC3C,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAML,OAAO,CAACM,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACN,4BAAD;AADmB,KAA/B,EAGDO,iBAHC,EAAN;AAIH,GALS,EAAV;AAMAH,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGJ,OAAO,CAACS,eAAR,CAAwBR,4BAAxB,CAAV;AACAE,IAAAA,SAAS,GAAGC,OAAO,CAACM,iBAApB;AACAN,IAAAA,OAAO,CAACO,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACV,SAAD,CAAN,CAAkBW,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,kCAAD,EAAqC,MAAM;AACzC,UAAMG,MAAM,GAAGZ,SAAS,CAACa,SAAV,CAAoB,CAApB,CAAf;AACAH,IAAAA,MAAM,CAACE,MAAD,CAAN,CAAeE,OAAf,CAAuB,IAAvB;AACH,GAHC,CAAF;AAIAL,EAAAA,EAAE,CAAC,kCAAD,EAAqC,MAAM;AACzC,UAAMG,MAAM,GAAGZ,SAAS,CAACa,SAAV,CAAoB,EAApB,CAAf;AACAH,IAAAA,MAAM,CAACE,MAAD,CAAN,CAAeE,OAAf,CAAuB,EAAvB;AACH,GAHC,CAAF;AAIAL,EAAAA,EAAE,CAAC,+DAAD,EAAkE,MAAM;AACtE,UAAMM,UAAU,GAAGf,SAAS,CAACgB,SAA7B;AACAC,IAAAA,KAAK,CAACjB,SAAD,EAAY,aAAZ,CAAL;AACAA,IAAAA,SAAS,CAACkB,aAAV;AACAR,IAAAA,MAAM,CAACV,SAAS,CAACmB,WAAX,CAAN,CAA8BC,oBAA9B,CAAmDL,UAAnD;AACH,GALC,CAAF;AAMAN,EAAAA,EAAE,CAAC,kCAAD,EAAqC,MAAM;AACzC,UAAMY,IAAI,GAAG,IAAIC,IAAJ,CAAS,4BAAT,CAAb;AACA,UAAMV,MAAM,GAAGZ,SAAS,CAACmB,WAAV,CAAsBE,IAAtB,CAAf;AACAX,IAAAA,MAAM,CAACE,MAAD,CAAN,CAAeE,OAAf,CAAuB,oBAAvB;AACH,GAJC,CAAF;AAKH,CApCO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { AddToGoogleCalendarComponent } from './add-to-google-calendar.component';\ndescribe('AddToGoogleCalendarComponent', () => {\n    let component;\n    let fixture;\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            declarations: [AddToGoogleCalendarComponent]\n        })\n            .compileComponents();\n    });\n    beforeEach(() => {\n        fixture = TestBed.createComponent(AddToGoogleCalendarComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n    });\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('should return the correct number', () => {\n        const result = component.zero_pad2(5);\n        expect(result).toEqual('05');\n    });\n    it('should return the correct number', () => {\n        const result = component.zero_pad2(15);\n        expect(result).toEqual(15);\n    });\n    it('should call format date with provided end date and start date', () => {\n        const start_date = component.startDate;\n        spyOn(component, 'format_date');\n        component.addToCalendar();\n        expect(component.format_date).toHaveBeenCalledWith(start_date);\n    });\n    it('should return the formatted date', () => {\n        const date = new Date('December 17, 2021 03:24:00');\n        const result = component.format_date(date);\n        expect(result).toEqual('20211217T032400GMT');\n    });\n});\n"]},"metadata":{},"sourceType":"module"}